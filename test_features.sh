#!/bin/bash

# Script para testar as funcionalidades de avatares, contatos e grupos
# Assumindo que voc√™ tem uma inst√¢ncia conectada

echo "=== Testando Funcionalidades do Assistencialize ==="
echo ""

# Vari√°veis de configura√ß√£o
BASE_URL="http://localhost:8080"
JWT_TOKEN="SEU_JWT_TOKEN_AQUI"  # Substitua pelo seu token JWT
INSTANCE_TOKEN="SEU_INSTANCE_TOKEN_AQUI"  # Substitua pelo token da sua inst√¢ncia
INSTANCE_ID="SEU_INSTANCE_ID_AQUI"  # Substitua pelo ID da sua inst√¢ncia

echo "üîß Configura√ß√£o:"
echo "Base URL: $BASE_URL"
echo "JWT Token: ${JWT_TOKEN:0:20}..."
echo "Instance Token: ${INSTANCE_TOKEN:0:20}..."
echo "Instance ID: $INSTANCE_ID"
echo ""

# Fun√ß√£o para testar endpoint
test_endpoint() {
    local name="$1"
    local url="$2"
    local method="${3:-GET}"
    local data="$4"
    
    echo "üß™ Testando: $name"
    echo "URL: $method $url"
    echo ""
    
    if [ "$method" = "POST" ] && [ -n "$data" ]; then
        response=$(curl -s -X "$method" \
            -H "Authorization: Bearer $JWT_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$data" \
            "$url")
    else
        response=$(curl -s -X "$method" \
            -H "Authorization: Bearer $JWT_TOKEN" \
            "$url")
    fi
    
    echo "Resposta:"
    echo "$response" | jq '.' 2>/dev/null || echo "$response"
    echo ""
    echo "----------------------------------------"
    echo ""
}

# 1. Testar listagem de inst√¢ncias
echo "1Ô∏è‚É£ TESTANDO LISTAGEM DE INST√ÇNCIAS"
test_endpoint "Listar Inst√¢ncias" "$BASE_URL/api/v1/instances"
echo ""

# 2. Testar status de uma inst√¢ncia espec√≠fica
echo "2Ô∏è‚É£ TESTANDO STATUS DA INST√ÇNCIA"
test_endpoint "Status da Inst√¢ncia" "$BASE_URL/api/v1/session/status" "POST" '{"token":"'$INSTANCE_TOKEN'"}'
echo ""

# 3. Testar busca de avatar
echo "3Ô∏è‚É£ TESTANDO BUSCA DE AVATAR"
echo "üß™ Testando: Buscar Avatar da Inst√¢ncia"
echo "URL: GET $BASE_URL/api/v1/instances/$INSTANCE_ID/avatar"
echo ""

# Teste do avatar (vai retornar imagem ou erro)
avatar_response=$(curl -s -w "\nHTTP_CODE:%{http_code}\n" \
    -H "Authorization: Bearer $JWT_TOKEN" \
    -H "token: $INSTANCE_TOKEN" \
    "$BASE_URL/api/v1/instances/$INSTANCE_ID/avatar")

http_code=$(echo "$avatar_response" | grep "HTTP_CODE:" | cut -d: -f2)
response_body=$(echo "$avatar_response" | grep -v "HTTP_CODE:")

echo "C√≥digo HTTP: $http_code"
if [ "$http_code" = "200" ]; then
    echo "‚úÖ Avatar encontrado! (Resposta √© uma imagem)"
    echo "Tamanho da resposta: $(echo "$response_body" | wc -c) bytes"
elif [ "$http_code" = "404" ]; then
    echo "‚ö†Ô∏è Avatar n√£o encontrado (inst√¢ncia pode n√£o ter foto de perfil)"
else
    echo "‚ùå Erro ao buscar avatar"
    echo "Resposta: $response_body"
fi
echo ""
echo "----------------------------------------"
echo ""

# 4. Testar lista de contatos
echo "4Ô∏è‚É£ TESTANDO LISTA DE CONTATOS"
test_endpoint "Listar Contatos" "$BASE_URL/api/v1/user/contacts" "GET" "" \
    --header "token: $INSTANCE_TOKEN"
echo ""

# 5. Testar lista de grupos
echo "5Ô∏è‚É£ TESTANDO LISTA DE GRUPOS"
test_endpoint "Listar Grupos" "$BASE_URL/api/v1/group/list" "GET" "" \
    --header "token: $INSTANCE_TOKEN"
echo ""

echo "=== RESUMO DOS TESTES ==="
echo ""
echo "‚úÖ Testes realizados:"
echo "   1. Listagem de inst√¢ncias"
echo "   2. Status da inst√¢ncia"
echo "   3. Busca de avatar"
echo "   4. Lista de contatos"
echo "   5. Lista de grupos"
echo ""
echo "üìã Para usar este script:"
echo "   1. Fa√ßa login na aplica√ß√£o para obter o JWT_TOKEN"
echo "   2. Crie uma inst√¢ncia e conecte ao WhatsApp"
echo "   3. Obtenha o INSTANCE_TOKEN e INSTANCE_ID"
echo "   4. Substitua as vari√°veis no script"
echo "   5. Execute: bash test_features.sh"
echo ""
echo "üîç Verifica√ß√µes importantes:"
echo "   - Inst√¢ncia deve estar conectada para testar contatos/grupos"
echo "   - Avatar s√≥ aparece se a inst√¢ncia tiver foto de perfil"
echo "   - Contatos s√≥ aparecem se a inst√¢ncia tiver contatos salvos"
echo "   - Grupos s√≥ aparecem se a inst√¢ncia participar de grupos"
