version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    environment:
      - NODE_ENV=production
      - PORT=3001
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - whatsapp-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - whatsapp-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # PostgreSQL para dados persistentes
  database:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: whatsapp_manager
      POSTGRES_USER: ${DB_USER:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-change_me_in_production}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - whatsapp-network
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  # Redis para cache e filas
  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-change_me_in_production}
    volumes:
      - redis_data:/data
    networks:
      - whatsapp-network
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  # Watchtower para auto-update (opcional)
  watchtower:
    image: containrrr/watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 3600 --cleanup
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

networks:
  whatsapp-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local